import os
import shutil
import numpy as np
from PIL import Image
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.image import img_to_array

# === –®–ª—è—Ö–∏ ===
MODEL_PATH = r"D:\Programming\Diploma\TrainMachine\best_emotion_model_valacc.keras"
TEST_DIR = r"D:\Programming\Diploma\NewDatasetDirectory\test"
OUTPUT_DIR = r"D:\Programming\Diploma\NewDatasetDirectory\test_result"
IMG_SIZE = (128, 128)

# === –ö–ª–∞—Å–∏ –µ–º–æ—Ü—ñ–π ===
EMOTION_LABELS = ['angry', 'disgust', 'fear', 'happy', 'neutral', 'sad', 'surprise']

# === –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ ===
model = load_model(MODEL_PATH)

# === –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ ===
for label in EMOTION_LABELS:
    os.makedirs(os.path.join(OUTPUT_DIR, label), exist_ok=True)

# === –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω—å ===
for filename in os.listdir(TEST_DIR):
    if not filename.lower().endswith(('.jpg', '.jpeg', '.png')):
        continue

    path = os.path.join(TEST_DIR, filename)
    try:
        img = Image.open(path).convert("RGB")
        img = img.resize(IMG_SIZE, Image.Resampling.LANCZOS)  # ‚úÖ –ù–æ–≤–∏–π –∞–Ω—Ç–∏–∞–ª—ñ–∞—Å–∏–Ω–≥
        arr = img_to_array(img) / 255.0
        arr = np.expand_dims(arr, axis=0)

        prediction = model.predict(arr, verbose=0)
        label_index = np.argmax(prediction)
        label_name = EMOTION_LABELS[label_index]

        # === –ó–±–µ—Ä–µ–≥—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç ===
        dest_path = os.path.join(OUTPUT_DIR, label_name, filename)
        shutil.copy(path, dest_path)
        print(f"‚úÖ {filename} ‚Üí {label_name}")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑ {filename}: {e}")

print("\nüéâ –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—é –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
